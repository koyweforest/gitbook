{
  "openapi": "3.0.1",
  "info": {
    "title": "Koywe's API REST documentation",
    "description": "The present documentation provides the information you need to familiarize with the services available in Koywe's API REST!",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://api-test.koywe.com/rest"
    }
  ],
  "tags": [
    {
      "name": "Currency"
    },
    {
      "name": "Token"
    },
    {
      "name": "Payment-provider"
    },
    {
      "name": "Auth"
    },
    {
      "name": "Orders"
    }
  ],
  "paths": {
    "/currency-tokens": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Returns all supported Currency-Token pairs.",
        "description": "For the moment Koywe supports operations with the following local currencies [CLP, MXN, COP, PEN]",
        "operationId": "tokenCurrecyPairs",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Currency"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/currency-tokens/{currencySymbol}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Returns supported Currency-Token pairs for a given currency.",
        "description": "Receives a currency symbol to filter. [CLP, COP, MXN, PEN]",
        "operationId": "tokenCurrecyPair",
        "parameters": [
          {
            "name": "currencySymbol",
            "in": "path",
            "description": "Symbol assosiated with the currency of choice.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Currency"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          }
        }
      }
    },
    "/token-currencies": {
      "get": {
        "tags": [
          "Token"
        ],
        "summary": "Returns all supported Coin-Token pairs.",
        "description": "For the moment Koywe supports operations with the following tokens [ETH, MATIC, BNB, BTC, USDC, DAI]",
        "operationId": "currecyTokenPair",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Token"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/token-currencies/{tokenSymbol}": {
      "get": {
        "tags": [
          "Token"
        ],
        "summary": "Returns supported Coin-Token pairs.",
        "description": "Receives a token symbol to filter. For the moment Koywe supports operations with the following tokens [ETH, MATIC, BNB, BTC, USDC, DAI]",
        "operationId": "currecyTokenPairs",
        "parameters": [
          {
            "name": "tokenSymbol",
            "in": "path",
            "description": "Symbol assosiated with the token of choice.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "query",
            "description": "your company's unique Koywe identifier.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400_1"
                },
                "examples": {
                  "clientId invalid": {
                    "value": {
                      "message": "\"clientId\" must only contain alphanumeric characters"
                    }
                  },
                  "tokenSymbol invalid": {
                    "value": {
                      "message": "\"symbol\" must be one of [eth, matic, bnb, btc, usdc, dai]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment-providers": {
      "get": {
        "tags": [
          "Payment-provider"
        ],
        "summary": "Returns a list of available means of payment for a given currency.",
        "description": "If you want to know how to receive your own clientId, please check the \"Credentials\" section. the domain for all images provided directly by Koywe have the form https://rampa.koywe.com/paymentProviders/exampleImage.svg (keep in mind that this is just an example, but the domain shown is the actual one Koywe uses)",
        "operationId": "PaymentOptionsList",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Symbol assosiated with the currency of choice.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "query",
            "description": "your company's unique Koywe identifier.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payments"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400_1"
                },
                "examples": {
                  "clientId invalid": {
                    "value": {
                      "message": "\"clientId\" must only contain alphanumeric characters"
                    }
                  },
                  "Symbol invalid": {
                    "value": {
                      "message": "\"symbol\" must be one of [CLP, COP, MXN, PEN]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Returns an Authorization Token.",
        "description": "If you want to know how to receive your own clientId and secret, please check the \"Credentials\" section. \"email\" is optional.",
        "operationId": "auth",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/auth_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400_1"
                },
                "examples": {
                  "ClientId invalid lenght": {
                    "value": {
                      "message": "\"clientId\" length must be 24 characters long"
                    }
                  },
                  "ClientId required": {
                    "value": {
                      "message": "\"clientId\" is required"
                    }
                  },
                  "ClientId invalid": {
                    "value": {
                      "message": "\"clientId\" is not a valid objectId"
                    }
                  },
                  "Email invalid": {
                    "value": {
                      "message": "\"email\" must be a valid email"
                    }
                  },
                  "Secret required": {
                    "value": {
                      "message": "\"secret\" is required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/auth/validate": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Returns an id and send a validation email.",
        "description": "The email that is sent contains a 6-digit code that allows you to validate your session.",
        "operationId": "validate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/auth_validate_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationId"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400_1"
                },
                "examples": {
                  "Email required": {
                    "value": {
                      "message": "\"email\" is required"
                    }
                  },
                  "Email syntax": {
                    "value": {
                      "message": "\"email\" must be a valid email"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/code": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Returns session data.",
        "description": "The value \"code\" shall be retrieved from the email sent by the previous method call (auth/validate).",
        "operationId": "code",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/auth_code_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400_1"
                },
                "examples": {
                  "Code Syntax": {
                    "value": {
                      "message": "\"code\" must only contain digits."
                    }
                  },
                  "Code Lenght": {
                    "value": {
                      "message": "\"code\" length must be 6 characters long"
                    }
                  },
                  "Code Invalid": {
                    "value": {
                      "message": "Invalid code"
                    }
                  },
                  "Code required": {
                    "value": {
                      "message": "\"code\" is required"
                    }
                  },
                  "Email Syntax": {
                    "value": {
                      "message": "\"email\" must be a valid email"
                    }
                  },
                  "ClientId Syntax": {
                    "value": {
                      "message": "\"clientId\" length must be 24 characters long"
                    }
                  },
                  "ClientId value Syntax": {
                    "value": {
                      "message": "\"clientId\" must only contain alphanumeric characters"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400_1"
                },
                "examples": {
                  "Email not found": {
                    "value": {
                      "message": "Account not found."
                    }
                  },
                  "ClientId not found": {
                    "value": {
                      "message": "Client not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{OrderId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Returns order information.",
        "description": "To try these services, an Authorization token must be provided as a BearerToken header (try clicking the lock on the right!). The Autherization token can be obtained in the /auth service.",
        "operationId": "Getorder",
        "parameters": [
          {
            "name": "OrderId",
            "in": "path",
            "description": "Order's identifier.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400_1"
                },
                "examples": {
                  "orderId invalid": {
                    "value": {
                      "message": "\"orderId\" must be a valid GUID"
                    }
                  },
                  "Code Lenght": {
                    "value": {
                      "message": "\"code\" length must be 6 characters long"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404_1"
                }
              }
            }
          }
        },
        "security": [
          {
            "AuthorizationToken": []
          }
        ]
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Returns a lists of orders.",
        "description": "To try these services, an Authorization token must be provided as a BearerToken header (try clicking the lock on the right!). The Autherization token can be obtained in the /auth service.",
        "operationId": "order",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404_1"
                }
              }
            }
          }
        },
        "security": [
          {
            "AuthorizationToken": []
          }
        ]
      }
    },
    "/CreateQuote": {
      "post": {
        "tags": [
          "Quote Queries"
        ],
        "summary": "Creates a purchase or sell quote",
        "description": "If you want to know how to receive your own clientId, please check the \"Credentials\" section.",
        "operationId": "CreateQuote",
        "parameters": [
          {
            "name": "symbolIn",
            "in": "query",
            "description": "Symbol assosiated with the coin of choice to introduce.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbolOut",
            "in": "query",
            "description": "Symbol assosiated with the recieving coin of choice.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "query",
            "description": "Your company's unique Koywe identifier",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amountOut",
            "in": "query",
            "description": "Desired amount of currency you want to recieve.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          }
        }
      }
    },
    "/GetQuote": {
      "get": {
        "tags": [
          "Quote Queries"
        ],
        "summary": "Returns quote details",
        "description": ".",
        "operationId": "GetQuote",
        "parameters": [
          {
            "name": "quoteId",
            "in": "query",
            "description": "The quote's identifier.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Currency": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "6294cd18d2b5f912da43e678"
          },
          "name": {
            "type": "string",
            "example": "Peso Chileno"
          },
          "symbol": {
            "type": "string",
            "example": "CLP"
          },
          "decimals": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "currencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency_currencies"
            }
          }
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "6303d71295ee10bace884ac4"
          },
          "name": {
            "type": "string",
            "example": "Binance Coin"
          },
          "symbol": {
            "type": "string",
            "example": "BNB"
          },
          "decimals": {
            "type": "integer",
            "format": "int32",
            "example": 18
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Token_tokens"
            }
          }
        }
      },
      "Payments": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "example": "632d7fe6237ded3a748112cf"
          },
          "name": {
            "type": "string",
            "example": "WIRECL"
          },
          "description": {
            "type": "string",
            "example": "La comisión de transferencia bancaria equivale a un 1% del total de tu compra"
          },
          "fee": {
            "type": "integer",
            "example": 0
          },
          "logo": {
            "type": "string",
            "example": "/wire-cl.png"
          },
          "details": {
            "type": "string",
            "example": "Koywe SpA\nCta Cte 6824645\n76.215.256-2\nBanco Santander\ntef@koywe.com"
          }
        }
      },
      "AuthToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5pY29sYXNAa295d2UuY29tIiwibWV0YUFjY291bnQiOiI2Mzg4ZDVjNzA2YmFkOWIxNjE1MWYzNmEiLCJjbGllbnRBdXRoIjpmYWxzZSwiaWF0IjoxNjc0NTAzMzE2LCJleHAiOjE2NzQ1NDY1MTZ9.C1aL9-FSL-VF8t9wce--4M6ZB_d1IHihpDuOYCmUcIT_-M3Fvp2Zds1HSI9WKPjvCj4zLhCBIX9Z8MExhOPinLsjWJO_SC96YFzo7HjZRZgRKgRNMjPaz5w2NSRnRKYqRbaH_ZLIcdoMu1hD7y1wQhsSh1TXQ9MuWfXZvto-484geJ5FWjkmaV5QpNIP-1B5OVL_skZ46Kin4uX3CMpRjeFA3x0__RLZIOqVFy_1XCnzrew_UjamXWoUWonP_4xoPmcSTz23OEvPPxW2syFkvakDskIovOyCU2WzlLs0nMhY6UnKQzpGhN9DclXdVG89xyJOB9ri2GKAW8pIIbguioTgqhykpaaSxRoDFtIvsGD8ptDMoF4xp1aZG2Tq_23MFVrF8EbTzHTx0DB4Gt2hWY5W5nabEU9gts0PqIbuEWVhD4KryrOQv5vmbfr2GuXRx_194zAD2ixSfxyiWnhAN_FMvzmj2wwe-GWWLaKH35yqHfwNRJIkYqEX5TL5T0KFR5izWbGJoyR6EXn6MU1-SrO1by22HmLlKF7Fs-2zXSYTT31a5KnWenA2UPMWbLUbsP_xY3ESWP3YY2k7QRkqIP-Rl90RYHi5_z2"
          }
        }
      },
      "ValidationId": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "63c80872b85f35f37e567064"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "63c6ceb6a9e78abfc1200354"
          },
          "koyweFee": {
            "type": "number",
            "example": 1000
          },
          "uuid": {
            "type": "string",
            "example": "e1946aec-82d8-47d6-994c-9740cb71a7e4"
          },
          "symbolIn": {
            "type": "string",
            "example": "CLP"
          },
          "symbolOut": {
            "type": "string",
            "example": "MATIC"
          },
          "amountIn": {
            "type": "number",
            "example": 25000
          },
          "amountOut": {
            "type": "number",
            "example": 32.171150520770496
          },
          "paymentMethodId": {
            "type": "string",
            "example": "6294d815d2b5f912da43e699"
          },
          "destinationAddress": {
            "type": "string",
            "example": "0x40f9bf922c23c43acede50Ab4425280C0ffBD697"
          },
          "email": {
            "type": "string",
            "example": "example@gmail.com"
          },
          "exchangeRate": {
            "type": "number",
            "example": 746.01
          },
          "networkFee": {
            "type": "number",
            "example": 0
          },
          "status": {
            "type": "string",
            "example": "REJECTED"
          },
          "date": {
            "$ref": "#/components/schemas/Order_date"
          }
        }
      },
      "Quote": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "63c59396a38c6506a620162f"
          },
          "symbolIn": {
            "type": "string",
            "example": "CLP"
          },
          "paymentMethodId": {
            "type": "string"
          },
          "exchangeRate": {
            "type": "string",
            "example": "1114994"
          },
          "amountOut": {
            "type": "string",
            "example": "3.3"
          },
          "amountIn": {
            "type": "string",
            "example": "3716338"
          },
          "koyweFee": {
            "type": "string",
            "example": "36794.801999999996"
          },
          "netFee": {
            "type": "string",
            "example": "63"
          },
          "co2": {
            "type": "string",
            "example": "0.0114004133901"
          },
          "validUntil": {
            "type": "string",
            "example": "1673892938"
          },
          "validFor": {
            "type": "string",
            "example": "180"
          },
          "symbolOut": {
            "type": "string",
            "example": "ETH"
          }
        }
      },
      "inline_response_400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "\"symbol\" must be one of [CLP, COP, MXN, PEN]"
          }
        }
      },
      "inline_response_400_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "auth_body": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          }
        }
      },
      "inline_response_404": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "partner not found"
          }
        }
      },
      "auth_validate_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "auth_code_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          }
        }
      },
      "inline_response_404_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Client not found"
          }
        }
      },
      "Currency_currencies": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "6283b7f8c7ab3a52fd8a51fc"
          },
          "name": {
            "type": "string",
            "example": "Binance Coin"
          },
          "symbol": {
            "type": "string",
            "example": "BNB"
          },
          "decimals": {
            "type": "integer",
            "format": "int32",
            "example": 18
          }
        }
      },
      "Token_tokens": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "6294cd18d2b5f912da43e678"
          },
          "name": {
            "type": "string",
            "example": "Peso Chileno"
          },
          "symbol": {
            "type": "string",
            "example": "CLP"
          },
          "decimals": {
            "type": "integer",
            "format": "int32",
            "example": 0
          }
        }
      },
      "Order_date": {
        "type": "object",
        "properties": {
          "orderedDate": {
            "type": "string",
            "example": "2023-01-17T16:37:22.626Z"
          },
          "payedDate": {
            "type": "string"
          },
          "transactionDate": {
            "type": "string"
          },
          "deliveredDate": {
            "type": "string"
          },
          "_id": {
            "type": "string",
            "example": "63c6cec24e1fdcfea36ce471"
          }
        }
      }
    },
    "securitySchemes": {
      "AuthorizationToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}